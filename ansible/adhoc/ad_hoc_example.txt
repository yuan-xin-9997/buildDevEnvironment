4、Ansible模块
1）command模块
command模块在远程主机执行命令，不支持管道、重定向等shell的特性。常用的参数如下：

chdir：在远程主机上运行命令前要提前进入的目录；
creates：在命令运行时创建一个文件，如果文件已存在，则不会执行创建任务；
removes：在命令运行时移除一个文件，如果文件不存在，则不会执行移除任务；
executeable：指明运行命令的shell程序；
在所有主机上运行“ls ./”命令，运行前切换到/home目录下。操作如下：

[root@centos01 ~]# ansible hadoop -i  /root/ansible/hadoop.ini -m command -a "chdir=/ ls ./"

2）shell模块
shell模块在远程主机执行命令，相当于调用远程主机的Shell进程，然后在该Shell下打开一个子Shell运行命令。和command模块的区别是它支持Shell特性：如管道、重定向等。

示例如下：

[root@centos01 ~]# ansible hadoop -i  /root/ansible/hadoop.ini -m shell -a "echo hello world "        
<!--输出到屏幕-->
192.168.100.20 | SUCCESS | rc=0 >>
hello world
192.168.100.30 | SUCCESS | rc=0 >>
hello world

[root@centos01 ~]# ansible hadoop -i  /root/ansible/hadoop.ini -m shell -a "echo hello world > /1.txt"   
<!--输出到1.txt文件中-->
92.168.100.20 | SUCCESS | rc=0 >>
192.168.100.30 | SUCCESS | rc=0 >>

3）copy模块
copy模块用于复制指定主机文件到远程主机的指定位置。常见的参数如下：

dest：指出复制文件的目标目录位置，使用绝对路径。如果源是目录，则目标也要是目录，如果目标文件已存在，会覆盖原有内容；
src：指出源文件的路径，可以使用相对路径和绝对路径，支持直接指定目录。如果源是目录，则目标也要是目录；
mode：指出复制时，目标文件的权限，可选；
owner：指出复制时，目标文件的属主，可选；
group：指出复制时目标文件的属组，可选；
content：指出复制到目标主机上的内容，不能和src一起使用，相当于复制content指明的数据到目标文件中；
示例如下：

[root@centos01 ~]# ansible hadoop -i  /root/ansible/hadoop.ini -m copy -a "src=/etc/hosts  
dest=/root/a1.hosts mode=777 owner=root group=root"  
<!--/将本机的hosts文件复制到web组中的所有主机上存放在家目录下的a1.hosts目录，  
权限是777，属主是root，属组是root-->

4）hostname模块
hostname模块用于管理远程主机上的主机名。常用的参数如下：

name：指明主机名；
示例如下：

[root@centos01 ~]# ansible 192.168.100.20 -m hostname -a "name=test"
<!--将192.168.100.20的主机名改为test，但是192.168.100.20需要敲一下bash才生效-->

5）yum模块
yum模块基于yum机制，对远程主机管理程序包。常用的参数如下：

name：程序包名称，可以带上版本号。若不指明版本，则默认为最新版本；
state=present|atest|absent：指明对程序包执行的操作:present表明安装程序包，latest表示安装最新版本的程序包，absent表示卸载程序包；
disablerepo：在用yum安装时，临时禁用某个仓库的ID；
enablerepo：在用yum安装时，临时启用某个仓库的ID；
conf_file：yum运行时的配置文件，而不是使用默认的配置文件；
disable_gpg_check=yes|no：是否启用完整性校验功能；
示例如下：

[root@centos01 ~]# ansible hadoop -i  /root/ansible/hadoop.ini -m shell -a "/usr/bin/rm -rf  
/etc/yum.repos.d/CentOS-*"  
<!--批量化删除web组主机的yum源-->  
[root@centos01 ~]# ansible hadoop -i  /root/ansible/hadoop.ini -m shell -a "/usr/bin/mount  
/dev/cdrom /mnt"   <!--批量化挂载光盘-->  
 [WARNING]: Consider using mount module rather than running mount  
  
192.168.100.20 | SUCCESS | rc=0 >>  
mount: /dev/sr0 写保护，将以只读方式挂载  
  
192.168.100.30 | SUCCESS | rc=0 >>  
mount: /dev/sr0 写保护，将以只读方式挂载  
[root@centos01 ~]# ansible hadoop -i  /root/ansible/hadoop.ini -m yum -a "name=httpd  
state=present"  <!--批量化安装httpd程序-->  
[root@centos01 ~]# ansible hadoop -i  /root/ansible/hadoop.ini -m shell -a "rpm -qa | grep httpd"  
<!--批量化查看安装的httpd程序包-->  
 [WARNING]: Consider using yum, dnf or zypper module rather than running rpm  
  
192.168.100.20 | SUCCESS | rc=0 >>  
httpd-2.4.6-67.el7.centos.x86_64  
httpd-tools-2.4.6-67.el7.centos.x86_64  
  
192.168.100.30 | SUCCESS | rc=0 >>  
httpd-2.4.6-67.el7.centos.x86_64  
httpd-tools-2.4.6-67.el7.centos.x86_64  
[root@centos01 ~]# ansible hadoop -i  /root/ansible/hadoop.ini -m shell -a "systemctl start httpd"       <!--批量启动服务-->  
[root@centos01 ~]# ansible hadoop -i  /root/ansible/hadoop.ini -m shell -a "netstat -anptu | grep httpd"     <!--批量化监听httpd服务是否启动成功-->  
192.168.100.20 | SUCCESS | rc=0 >>  
tcp6       0      0 :::80                   :::*                    LISTEN      2072/httpd  
  
192.168.100.30 | SUCCESS | rc=0 >>  
tcp6       0      0 :::80                   :::*                    LISTEN      3098/httpd
管理端只是发送yum指令到被管理端，被管理端要存在可用的yum仓库才可以成功安装。

6）service模块
service模块为用来管理远程主机上的服务的模块。常见的参数如下：

name:被管理的服务名称；
state=started|stopped|restarted：动作包含启动，关闭或重启；
enable=yes|no:表示是否设置该服务开机自启动；
runlevel:如果设定了enabled开机自启动，则要定义在哪些运行目标下自动启动；
示例如下：

[root@centos01 ~]# ansible hadoop -i  /root/ansible/hadoop.ini -m service -a "name=httpd
enabled=yes state=restarted"
<!--设置httpd服务重新启动和开机自动启动-->

7）user模块
user模块主要用于管理远程主机上的用户账号。常见的参数如下：

name:必选参数，账号名称；state=present|absent:创建账号或者删除账号，present表示创建，absent表示删除；
system=yes|no:是否为系统账户；
uid:用户UID；
group:用户的基本组
groups:用户的附加组；
shell:默认使用的shell；
home:用户的家目录；
mve_home=yes|no：
如果设置的家目录已经存在，是否将已存在的家目录进行移动；
pssword:用户的密码，建议使用加密后的字符串；
comment：
用户的注释信息；
remore=yes|no：
当state=absent时，是否要删除用户的家目录
创建用户示例如下：

[root@centos01 ~]# ansible hadoop -i  /root/ansible/hadoop.ini -m user -a "name=user01system=yes uid=502 group=root groups=root shell=/etc/nologinhome=/home/user01 password=pwd@123"<!--在web组的所有主机上新建一个系统用户，UID为502，属组是root，名字是user01，密码是pwd@123-->
